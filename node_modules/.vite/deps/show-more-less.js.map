{
  "version": 3,
  "sources": ["../../show-more-less/src/index.tsx"],
  "sourcesContent": ["import * as React from 'react'\nimport styles from './styles.module.css';\n\n/**\n * @typedef {Function} OnExpand - a custom function to handle the onExpand click\n * @param {boolean} value - This is the updated value, passed as a param\n */\nexport type OnExpand = (value: boolean) => void;\n\n/**\n * @typedef {Object} ClassesObject - a custom object for style classes\n * @property {string} root - an optional style class at the root level\n * @property {string} text - an optional style class at the text level\n * @property {string} clickable - an optional style class at the show more/less text level\n */\nexport type ClassesObject = {\n  root?: string,\n  text?: string,\n  clickable?: string,\n}\n\n/**\n * @typedef {Object} ShowMoreLessProps - a custom props object\n * @property {string} text - text to be shown\n * @property {string} [showMoreLabel=\"...Show More\"] - an optional label text for show more \n * @property {string} [showLessLabel=\"Show Less\"] - an optional label text for show less\n * @property {string} classes - an optional ClassesObject, for style\n * @property {string} [threshold=100] - an optional param, a point after which the text will be trimmed\n * @property {string} [expanded=false] - an optional param, determines whether the text is expanded or not\n * @property {string} onExpand - an optional param, a callback function called on clicking show more/less text\n */\nexport type ShowMoreLessProps = {\n  text: string,\n  showMoreLabel?: string,\n  showLessLabel?: string,\n  classes?: ClassesObject,\n  threshold?: number,\n  expanded?: boolean,\n  onExpand?: OnExpand,\n}\n\nfunction ShowMoreLess({ text, classes, showLessLabel = 'Show Less', showMoreLabel = '...Show More', threshold = 100, expanded = false, onExpand }: ShowMoreLessProps) {\n  // Style class for show more/less\n  const clickableClass = [classes?.clickable || styles.clickable];\n\n  // if a callback is provided, add a pointer effect to the clickable class\n  if (onExpand) {\n    clickableClass.push(styles.pointer);\n  }\n\n  return (\n    <div className={classes?.root}>\n      <span className={classes?.text}>\n        {expanded ? text : text.substring(0, threshold)}\n      </span>\n      {\n        <span className={clickableClass.join(' ')} onClick={() => {\n          if (onExpand) {\n            onExpand(!expanded);\n          }\n        }}>{expanded ? showLessLabel : showMoreLabel}</span>\n      }\n    </div>);\n}\n\nexport default ShowMoreLess;\n"],
  "mappings": ";;;;;;;;;;AAyCA,SAASA,aAAT,MAAA;MAAwBC,OAAAA,KAAAA,MAAMC,UAAAA,KAAAA,mCAASC,eAAAA,gBAAAA,uBAAAA,SAAgB,cAAA,8CAAaC,eAAAA,gBAAAA,uBAAAA,SAAgB,iBAAA,0CAAgBC,WAAAA,YAAAA,mBAAAA,SAAY,MAAA,qCAAKC,UAAAA,WAAAA,kBAAAA,SAAW,QAAA,eAAOC,WAAAA,KAAAA;AAErI,MAAMC,iBAAiB,EAACN,YAAO,QAAPA,YAAO,SAAP,SAAAA,QAASO,cAAaC,OAAOD,SAA9B;AAGvB,MAAIF,UAAU;AACZC,mBAAeG,KAAKD,OAAOE,OAA3B;EACD;AAED,aACEC,4BAAA,OAAA;IAAKC,WAAWZ,YAAF,QAAEA,YAAF,SAAA,SAAEA,QAASa;SACvBF,4BAAA,QAAA;IAAMC,WAAWZ,YAAF,QAAEA,YAAF,SAAA,SAAEA,QAASD;KACvBK,WAAWL,OAAOA,KAAKe,UAAU,GAAGX,SAAlB,CADrB,OAIEQ,4BAAA,QAAA;IAAMC,WAAWN,eAAeS,KAAK,GAApB;IAA0BC,SAAS,SAAA,UAAA;AAClD,UAAIX,UAAU;AACZA,iBAAS,CAACD,QAAF;MACT;IACF;KAAGA,WAAWH,gBAAgBC,aAJ/B,CALJ;AAYH;;",
  "names": ["ShowMoreLess", "text", "classes", "showLessLabel", "showMoreLabel", "threshold", "expanded", "onExpand", "clickableClass", "clickable", "styles", "push", "pointer", "React", "className", "root", "substring", "join", "onClick"]
}
